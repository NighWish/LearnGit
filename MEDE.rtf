{\rtf1\ansi\ansicpg936\cocoartf1343\cocoasubrtf140
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 STHeitiSC-Light;}
{\colortbl;\red255\green255\blue255;\red170\green13\blue145;\red131\green108\blue40;\red196\green26\blue22;
\red14\green14\blue255;\red28\green0\blue207;}
\paperw11900\paperh16840\margl1440\margr1440\vieww24060\viewh13560\viewkind0
\deftab1059
\pard\tx1059\pardeftab1059\pardirnatural

\f0\fs44 \cf2 \CocoaLigature0 <h2>\cf0 NSAttributedString HTML Additions\cf2 </h2>\cf0 \
\cf2 <h3>\cf0 Introduction\cf2 </h3>\cf0 \
\cf2 <p>\cf0 This project 
\f1 \'d4\'ac\'d6\'be\'d4\'c6
\f0  aims to duplicate the methods \cf2 <u>\cf0 present on Mac OSX\cf2 </u>\cf0  which allow creation of \cf2 <font \cf3 face\cf2 =\cf4 "Courier"\cf2  \cf3 color\cf2 =\cf4 "blue"\cf2 >\cf0 NSAttributedString\cf2 </font>\cf0  from HTML code.\
This is useful for drawing simple rich text - like this document - without having to use a UIWebView.\cf2 </p>\cf0 \
\cf2 <p><img \cf3 src\cf2 =\cf4 "Oliver.jpg"\cf2  \cf3 width\cf2 =\cf4 "100"\cf2  \cf3 height\cf2 =\cf4 "100"\cf2 ></p>\cf0 \
\cf2 <p \cf3 style\cf2 =\cf4 "color:orange;"\cf2 ><i>\cf0 Hi! I'm Oliver and I appreciate your help!\cf2 </i></p>\cf0 \
\cf2 <h3>\cf0 Features\cf2 </h3>\cf0 \
\cf2 <p>\cf0 At \cf2 <em>\cf0 present\cf2 </em>\cf0  the following tags are \cf2 <b>\cf0 supported\cf2 </b>\cf0 :\cf2 </p>\cf0 \
\cf2 <ul><li>\cf0 Headers \cf2 <b>\cf0 H1\cf2 </b>\cf0  - \cf2 <b>\cf0 H6\cf2 </b></li><li>\cf0 Paragraphs: \cf2 <b>\cf0 P\cf2 </b></li><li>\cf0 Bold: \cf2 <b>\cf0 B\cf2 </b>\cf0 , \cf2 <b>\cf0 STRONG\cf2 </b></li><li>\cf0 Italic: \cf2 <b>\cf0 I\cf2 </b>\cf0 , \cf2 <b>\cf0 EM\cf2 </b></li>\cf0 \
\cf2 <li>\cf0 Underline \cf2 <b>\cf0 U\cf2 </b></li>\cf0 \
\cf2 <li>\cf0 Superscript \cf2 <b>\cf0 SUP\cf2 </b>\cf0  and Subscript \cf2 <b>\cf0 SUB\cf2 </b>\cf0 , e.g. e = mc\cf2 <sup>\cf0 2\cf2 </sup></li>\cf0 \
\cf2 <li>\cf0 Strike Out \cf2 <b>\cf0 DEL\cf2 </b>\cf0 , e.g. \cf2 <del>\cf0 Something Removed\cf2 </del>\cf0  or \cf2 <b>\cf0 STRIKE\cf2 </b>\cf0  e.g. \cf2 <strike>\cf0 Something Striked\cf2 </strike></li>\cf0 \
\cf2 <li><b>\cf0 FONT\cf2 </b>\cf0  (face,color and size 1-7)\cf2 </li>\cf0 \
\cf2 <li>\cf0 Horizontal Rule \cf2 <b>\cf0 HR\cf2 </b>\cf0  (coloring via background-color style, simplified)\cf2 </li>\cf0 \
\cf2 <li>\cf0 Hyperlinks \cf2 <b>\cf0 A\cf2 </b>\cf0  (\cf2 <a \cf3 href\cf2 =\cf4 "{\field{\*\fldinst{HYPERLINK "http://www.cocoanetics.com"}}{\fldrslt \cf5 http://www.cocoanetics.com}}"\cf2 >\cf0 Formatting\cf2 </a>\cf0  only, clickable as custom view)\cf2 </li>\cf0 \
\cf2 <li>\cf0 Unordered Lists \cf2 <b>\cf0 LI\cf2 </b></li>\cf0 \
\cf2 <li>\cf0 Ordered Lists \cf2 <b>\cf0 OL\cf2 </b></li></ul>\cf0 \
\cf2 <p>\cf0 Currently attributes are inherited from enclosed tags via brute force. I don't know if this is accurate.\cf2 </p>\cf0 \
\cf2 <h3>\cf0 Known Differences\cf2 </h3>\cf0 \
	\cf2 <p>\cf0 In many aspects DTCoreText is superior to the Mac version of generating NSAttributedStrings from HTML. These become apparent in the MacUnitTest where the output from both is directly compared. I am summarizing them here for references.\cf2 </p>\cf0 \
	\cf2 <p>\cf0 In the following "Mac" means the initWithHTML: methods there, "DTCoreText" means DTCoreText's initWithHTML and/or DTHTMLAttributedStringBuilder\cf2 </p>\cf0 \
	\cf2 <ul>\cf0 \
		\cf2 <li>\cf0 Mac does not support the video tag, DTCoreText does.\cf2 </li>\cf0 \
		\cf2 <li>\cf0 DTCoreText is able to synthesize small caps by putting all characters in upper case and using a second smaller font for lowercase characters.\cf2 </li>\cf0 \
		\cf2 <li>\cf0 I suspect that Mac makes use of the -webkit-margin-* CSS styles for spacing the paragraphs, DTCoreText only uses the -webkit-margin-bottom and margin-bottom at present.\cf2 </li>\cf0 \
		\cf2 <li>\cf0 Mac supports CSS following addresses, e.g. "ul ul" to change the list style for stacked lists. DTCoreText does not support that and so list bullets stay the same for multiple levels.\cf2 </li>\cf0 \
	\cf2 </ul>\cf0 \
\
\cf2 <h3>\cf0 Please Help!\cf2 </h3>\cf0 \
\cf2 <p>\cf0 If you find brief test cases where the created \cf2 <font \cf3 face\cf2 =\cf4 "Courier"\cf2  \cf3 color\cf2 =\cf4 "blue"\cf2 >\cf0 NSAttributedString\cf2 </font>\cf0  differs from the version on OSX please send them to us!\cf2 </p>\cf0 \
\cf2 <p>\cf0 Also there are many small things that you could help this project with. You can either implement these yourself or sponsor their development.\cf2 </p>\cf0 	\
	\cf2 <p>\cf0 Follow \cf2 <a \cf3 href\cf2 =\cf4 "{\field{\*\fldinst{HYPERLINK "http://twitter.com/cocoanetics"}}{\fldrslt \cf5 http://twitter.com/cocoanetics}}"\cf2 >\cf0 @cocoanetics\cf2 </a>\cf0  on Twitter\cf2 </p>\cf0 \
\cf2 <p>\cf0 This code is covered by a BSD License. \cf6 &copy;\cf0  2011 Oliver Drobnik\cf2 </p>}